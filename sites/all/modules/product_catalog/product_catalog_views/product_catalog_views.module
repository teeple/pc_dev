<?php
function product_catalog_form_views_pre_build(&$view) {
//dsm($view);
	switch($view->name){
		case 'list_condition_level3_sub_factors':

		$targetFilter = array();
		$targetHandler = array();
		$targetField = array();

		$targetFilter[] = $view->filter['status'];
		$targetHandler[] = $view->display_handler->handlers['filter']['status'];

		$filterName = array();
		$fieldName = array();

	    $subfactorType = $view->args[2];
		
	    switch($subfactorType){
	    	//WHAT
	    	//
	        case 'conditionwhaturlgroupfactors':
	        	$filterName = array('title', 'field_url_url');
			break;
			case 'conditionwhatcustomfactors':
				$filterName = array('title','field_rating_factor_tid','field_rating_operation_tid','field_value_value');

			break;

			//WHEN
			//
			case 'conditionwhencustomfactors':
				$filterName = array('title','field_rating_factor_tid','field_rating_operation_tid','field_value_value');
			break;
			case 'conditionwhendurationfactors':
				$filterName = array('title','field_duration_value','field_duration_value2');
				$fieldName = array('title','field_duration');
				$temp = array();
				$temp['title'] = $view->field['title'];
				$temp['nid'] = $view->field['nid'];
				$temp['field_duration'] = $view->field['field_duration'];
				$temp['php'] = $view->field['php']; //edit button

				$view->field = $temp;

			break;
            case 'conditionwhendayfactors':
            	$filterName = array('title','field_custom_date_value');

                $temp = array();
                $temp['title'] = $view->field['nid'];
				$temp['nid'] = $view->field['nid'];
				$temp['field_custom_date'] = $view->field['field_custom_date'];
				$temp['php'] = $view->field['php']; //edit button
				$view->field = $temp;

            break;

            case 'conditionwhentimeslotfactors':
            	$filterName = array('title','field_time_from_value','field_time_to_value');
            break;

            case 'conditionwhenweekfactors':
            	$filterName = array('title','field_week_tid','field_is_holiday_value');
            break;

            // WHERE
            //
            case 'conditionwherecountryfactors':
            	$filterName = array('title','field_ref_country_code_tid');
            break;
			case 'conditionwherecustomfactors':
				$filterName = array('title','field_rating_factor_tid','field_rating_operation_tid','field_value_value');
            break;
            case 'conditionwherenetworkfactors':
            	$filterName = array('title','field_ref_newtork_type_tid');
            break;

            //WHO
            //
            case 'conditionwhocustomfactors':
            	$filterName = array('title','field_rating_factor_tid','field_rating_operation_tid','field_value_value');
            break;
            case 'conditionwhomemberfactors':
            	$filterName = array('title','field_is_onnet_value','field_user_type_tid','field_age_value','field_age_operation_tid','field_gender_tid','field_target_user_tid');
            break;
            case 'conditionwhonumberfactors':
            	$filterName = array('title','field_phone_number_value');
            break;
            case 'conditionwhoprefixfactors':
            	$filterName = array('title','field_prefix_value');
            break;
	    }

	    foreach($filterName as $item){
	    	$targetFilter[] = $view->filter[$item];
			$targetHandler[] = $view->display_handler->handlers['filter'][$item];
	    }
	    foreach($fieldName as $item){
	    	$targetField[] = $view->field[$item];
	    }

		$view->filter = $targetFilter;
		$view->display_handler->handlers['filter'] = $targetHandler;

        //dsm($view);

		break;
	}
}

function product_catalog_product_group_list( $nid, $field) 
{
	$output = '';
	$scheme = node_load( $nid);
	foreach( $scheme->{$field}['und'] as $grp_nid) {
		$grp = node_load( $grp_nid);
		$nids = ocs_get_nids_by_cond( 'productgroupmainselected', array(
			array( 'field_ref_product_group', 'nid', $grp_nid)));
		if ( ! empty( $nids)) {
			$idx = 0;
			foreach( $nids as $nid) {
				$ref_grp = node_load( $nid);
				$prd = node_load( $ref_grp->field_ref_product['und'][0]['nid']);
				if ( $idx > 0) $output .= ' , ';
				$output .= l( $prd->title, 'node/'.$prd->nid);
				$idx ++;
			}
		}
//		$rows[] = array( $grp->title, $output);
	}
//	print theme( 'table', array( 'rows' => $rows, 'header' => array( 'Group', 'Product')));
	print $output;
}

function product_catalog_exclusive_list( $nid)
{
	$prd = node_load( $nid);
	$ex_list = array();

	//dpm( $prd, $prd->title);
	if ( isset($prd->field_exclusiveness_others['und'])) {
		foreach( $prd->field_exclusiveness_others['und'] as $prd_nid) {
			$ex_prd = node_load( $prd_nid['nid']);
			if ( isset($ex_prd->field_product_type['und'][0]['tid']))
				$ex_list[$ex_prd->field_product_type['und'][0]['tid']][] = $ex_prd;
		}
	}
	if ( isset($prd->field_exclusiveness['und'])) {
		foreach( $prd->field_exclusiveness['und'] as $prd_nid) {
			$ex_prd = node_load( $prd_nid['nid']);
			if ( isset($ex_prd->field_product_type['und'][0]['tid']))
				$ex_list[$ex_prd->field_product_type['und'][0]['tid']][] = $ex_prd;
		}
	}

	$rows = array();
	foreach( $ex_list as $type => $list) {
		$term = taxonomy_term_load( $type);
		$obj_list = '';
		$idx = 0;
		foreach( $list as $obj) {
			if ( $idx ++ > 0) $obj_list .= ' , ';
			$obj_list .= l( $obj->title, 'node/'. $obj->nid);
		}
		$rows[] = array( $term->name, $obj_list);
	}

	if ( count( $rows) > 0) {
		print theme( 'table', array( 'rows' => $rows));
	}
	else {
		print 'No Exculsive Products';
	}
}

function depositschemefactor_thresholdscheme_detail($depositschemefactor_nid){
	$output = '';	
	$headers = array('Level','Min Threshold','Max Threshold', 'Action');
	
	$factor = node_load($depositschemefactor_nid);
	//dsm($factor,'factor');
	$threshold_scheme_nid = !empty($factor->field_ref_thresholdscheme)? $factor->field_ref_thresholdscheme['und'][0]['nid']: NULL;
	$rows = array();

	if(isset($threshold_scheme_nid)){
		$threshold_scheme_node = node_load($threshold_scheme_nid);
		$output = $threshold_scheme_node->title;
	  $row_data = array();
		
	  foreach($factor->field_deposit_amount_collection['und'] as $item){
	  	$deposit_collection_info = field_collection_item_load($item['value']);
			$threshold_amount_min = isset($deposit_collection_info->field_threshold_amount['und'][0]['value'])?$deposit_collection_info->field_threshold_amount['und'][0]['value']:0;
			$threshold_amount_max = isset($deposit_collection_info->field_threshold_amount_max['und'][0]['value'])?$deposit_collection_info->field_threshold_amount_max['und'][0]['value']:0;
	  	//dsm($deposit_collection_info,'deposit_collection_info');
	  	
			$view_result = views_get_view_result('list_thresholdschemefactors', 'panel_pane_1',$threshold_scheme_nid);
			
			foreach($view_result as $view_item){
				$threshold_factor = node_load($view_item->nid);
				$level = isset($threshold_factor->field_limittothreshold['und'][0]['value'])?$threshold_factor->field_limittothreshold['und'][0]['value']:NULL;
				if($level != NULL){
					$actions = array();
					if(isset($threshold_factor->field_threshold_action_set['und'])){
						foreach($threshold_factor->field_threshold_action_set['und'] as $action_item){
							$action_collection_info = field_collection_item_load($action_item['value']);
							$action_term = taxonomy_term_load($action_collection_info->field_action_type['und'][0]['tid']);
							$actions[] = $action_term->name;
							//$actions[] = $action_collection_info->field_action_type['und'][0]['taxonomy_term']->name;
						}
					}
					$actions = join('<br/>',$actions);
					$row_data[$level]['action'] = $actions;
					
					$min = number_format($threshold_amount_min*$level/100);
					$max = number_format($threshold_amount_max*$level/100);
					$row_data[$level]['min'][] = $min;
					$row_data[$level]['max'][] = $max;
				}
			}
	 	}
		foreach($row_data as $level => $value){
			$min = join('<br/>',$value['min']);
			$max = join('<br/>',$value['max']);
			$rows[] = array($level.'%',$min,$max,$value['action']);
		}
	}

	$output .= theme('table',array('header' => $headers,'rows' => $rows));
	
	return $output;
}


?>
