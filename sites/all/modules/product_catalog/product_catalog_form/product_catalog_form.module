<?php
module_load_include('inc', 'product_catalog_form');
module_load_include('inc', 'product_catalog_form', 'alter_simpleproductoffering_node_form');
module_load_include('inc', 'product_catalog_form', 'handler_redirect');
module_load_include('inc', 'product_catalog_form', 'handler_submit');
module_load_include('inc', 'product_catalog_form', 'handler_update');
module_load_include('inc', 'product_catalog_form', 'handler_validate');
module_load_include('inc', 'product_catalog_form', 'handler_delete');
module_load_include('inc', 'product_catalog_form', 'handler_alter');
module_load_include('inc', 'product_catalog_form', 'handler_theme');

function product_catalog_form_init() {
  if (($_GET['q'] == 'system/ajax' || strstr($_GET['q'], 'file/ajax/')) && preg_match('/^[a-z_]+_node_form/', $_POST['form_id'])) {
    module_load_include('inc', 'node', 'node.pages');
  }
}

function product_catalog_form_node_presave() {
    //dsm($node);
}

function _create_test_product(){
    global $user;	
	module_load_include('inc', 'node', 'node.pages');
	$customer_type_name = array('Ind','Cor','Hos','Apt','Hot');
    $bill_type_name = array('Post','Pre','Hyb');
    $bill_type_tid = array(679,678,680);
    $cust_group_tid = array(1639,1640,1642,1641);
    
    //Mobile 406, IPTV 673, BroadBand 530, VOIP 409, Satellite 531, Bundle 671
    $service_domain_tid = 671;
    $product_id_start = 4200;
	$product_name_start = 'Qps_BIVS_'; 
    $is_bundle = FALSE;
    //$is_bundle = TRUE;
	 
	for($i=0;$i<5;$i++){
		for($j=0;$j<3;$j++){		
		    $node = new StdClass();
		    $node->uid = $user->uid;
		    $node->type = 'simpleproductoffering';
		    $node->language = 'und';    
			$node->field_service_type_of_provider['und'][0]['tid'] = $service_domain_tid;
			 
            if($is_bundle){
              $nodeTitle = $product_name_start.$customer_type_name[$i].'_'.$bill_type_name[$j].'_B';
            }else{
		      $nodeTitle = $product_name_start.$customer_type_name[$i].'_'.$bill_type_name[$j];
            }
            $node->title = $nodeTitle;
            
			$node->field_product_id['und'][0]['value'] = (string)$product_id_start;
			$product_id_start++;
			
			$node->field_is_bundle['und'][0]['value'] = 0;
		    
			$node->field_product_type['und'][0]['tid'] = 479;			
			$node->field_billing_type['und'][0]['tid'] = $bill_type_tid[$j];
			if($i == 0){
				$node->field_customer_type['und'][0]['tid'] = 1636;
			}else{
				$node->field_customer_type['und'][0]['tid'] = 1637;
				$node->field_customer_group_type['und'][0]['tid'] = $cust_group_tid[$i-1];
			}
			
			node_save($node);
			
			//billing type
		    $voca_name = _get_vocabulary_name('simpleproductoffering', $node);
				
			// vocabulary에서 'Main' counter에 해당하는 부분에 basic counter를 자동으로 생성하게 해준다. 
			$mainTerm = taxonomy_get_term_by_name('Main', $voca_name);
			
			if(!empty($mainTerm)) {
				_create_default_basic_counters($node->nid, current($mainTerm)->tid);
			}
			
			// 자동으로 생성해주어야 하는 instance를 만들어준다. 
			// default attribute instance create
			_create_default_prdattributes($node, $voca_name);	
            
            //link bundled products
            $nodeTitle = explode('_',$nodeTitle);
            
            if($nodeTitle[0] != 'Mono'){
                $targetDomains = $nodeTitle[1];
                $targetDomains = str_split($targetDomains);
                
                $weight = 0;  
                foreach($targetDomains as $item){
                    $targetProductName = 'Mono_'.$item.'_'.$nodeTitle[2].'_'.$nodeTitle[3].'_B';
                     
                    $child = new StdClass();
                    $child->uid = $user->uid;
                    $child->language = 'und';
                    $child->type = 'prdattributepackaged';
                    $child->field_weight['und'][0]['value'] = $weight;
                    $weight += 100;
                    $child->field_ref_tree_tid['und'][0]['value'] = 1447;
                    $child->field_ref_product['und'][0]['nid'] = $node->nid;
                    $term = taxonomy_get_term_by_name('Mandatory_MarketOpen','prdrelationtype');
                    $child->field_ref_prdrelationtype['und'][0]['tid'] = current($term)->tid;
                    
                    $view = views_get_view('list_simple_product_offering');
                    $view->set_display('panel_pane_5');
                    $view->set_arguments(array('0' => $targetProductName));   
                    $view->execute();
                    $referenceProductNid = $view->result[0]->nid;                                      
                    $child->field_ref_connected_product['und'][0]['nid'] = $referenceProductNid;
                    
                    node_save($child);
                }
            }
        }
	}
}
?>
