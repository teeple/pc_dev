<?php
module_load_include('inc', 'product_catalog_form');
module_load_include('inc', 'product_catalog_form', 'alter_simpleproductoffering_node_form');
module_load_include('inc', 'product_catalog_form', 'handler_redirect');
module_load_include('inc', 'product_catalog_form', 'handler_submit');
module_load_include('inc', 'product_catalog_form', 'handler_update');
module_load_include('inc', 'product_catalog_form', 'handler_validate');
module_load_include('inc', 'product_catalog_form', 'handler_delete');
module_load_include('inc', 'product_catalog_form', 'handler_alter');
module_load_include('inc', 'product_catalog_form', 'handler_theme');

function product_catalog_form_cron() {
  _cleanup_defered_delete();
}

function product_catalog_form_cronapi($op, $function = NULL) {
  switch($op) {
    case 'list':
      return array(
        'product_catalog_cron_daily_delete_backupfiles' => 'Product Catalog Daily Delete Backupfiles',
      );

    case 'rule':
      switch($function) {
        case 'product_catalog_cron_daily_delete_backupfiles': return '* * * * *';
      }
      break;
    case 'execute':
      switch($function) {
        case 'product_catalog_cron_daily_delete_backupfiles':
          _product_catalog_delete_backupfiles();
          break;
      }
      break;
  }
}

function _product_catalog_delete_backupfiles(){
	  // load config node
    $query = new EntityFieldQuery();
    $result = $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'backupandmigrateconfiguration')
        ->execute();

    if (count($result) > 0) {
        $nids = array_keys( $result['node']);
        $configNode = node_load($nids[0]);
				$days = $configNode->field_valid_days['und'][0]['value'];
        
        _delete_old_files('/var/www/backup_migrate/manual/',$days);
        _delete_old_files('/var/www/backup_migrate/scheduled/',$days);
    }
}

function _delete_old_files($location,$days){
    //$location = '/var/www/backup_migrate/manual/';
    $time = time();
    $pivot = strtotime("-".$days." day", $time);
    
    $files = array();
        if (is_dir($location)) {
            if ($dh = opendir($location)) {
                while (($file = readdir($dh)) !== false) {
                    if ($file == "." || $file == "..") continue; 
                    $files[] = $file;
                }
                closedir($dh);
            }
        }
    
    foreach($files as $file){
      $fileTime = filemtime($location.$file);
      if($fileTime < $pivot){
          unlink($location.$file);
      }
    }
}

function product_catalog_form_init() {
  if (($_GET['q'] == 'system/ajax' || strstr($_GET['q'], 'file/ajax/')) && preg_match('/^[0-9a-zA-Z_]+_node_form/', $_POST['form_id'])) {
    module_load_include('inc', 'node', 'node.pages');
  }
}

/*
function product_catalog_form_node_presave($node) {

	$product = node_load($node->field_ref_product['und'][0]['nid']);
	$node->field_recurring_charge_id['und'][0]['value'] = $product->field_product_id['und'][0]['value'] . '_' . $node->field_price_amount_float['und'][0]['value'];
	
}
*/

?>
